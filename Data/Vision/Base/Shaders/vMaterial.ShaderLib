FILEVERSION = 2.4.0.0;
PLATFORM = DX9;

RENDER_STATE RSC_0 {
  trackingmask = 1536;
  compiledClass = "VDynamicLightShader";

  //------ Blend State Group ------
  blendenable = 255;
  alphatestref = 100;
  alphatestfunc = less_or_equal;

  //------ Depth Stencil Group ------
  depthcomparisonfunc = equal;

  //------ Rasterizer State Group ------

  //------ Tesselation State Group ------
}

RENDER_STATE RSC_1 {
  trackingmask = 1536;
  compiledClass = "VDynamicLightShader";

  //------ Blend State Group ------
  blendenable = 255;
  alphatestref = 100;
  alphatestfunc = less_or_equal;

  //------ Depth Stencil Group ------
  depthcomparisonfunc = equal;

  //------ Rasterizer State Group ------

  //------ Tesselation State Group ------
}

RENDER_STATE RSC_2 {
  trackingmask = 1536;
  compiledClass = "VDynamicLightShader";

  //------ Blend State Group ------
  blendenable = 255;
  alphatestref = 100;
  alphatestfunc = less_or_equal;

  //------ Depth Stencil Group ------
  depthcomparisonfunc = equal;

  //------ Rasterizer State Group ------

  //------ Tesselation State Group ------
}

RENDER_STATE RSC_3 {
  trackingmask = 1536;
  compiledClass = "VDynamicLightShader";

  //------ Blend State Group ------
  blendenable = 255;
  alphatestref = 100;
  alphatestfunc = less_or_equal;

  //------ Depth Stencil Group ------
  depthcomparisonfunc = equal;

  //------ Rasterizer State Group ------

  //------ Tesselation State Group ------
}

RENDER_STATE RSC_4 {
  trackingmask = 512;
  compiledClass = "VShadowMapFillShaderPass";

  //------ Blend State Group ------
  alphatestref = 100;
  alphatestfunc = less_or_equal;

  //------ Depth Stencil Group ------

  //------ Rasterizer State Group ------
  rst_flags = 0;

  //------ Tesselation State Group ------
}

RENDER_STATE RSC_5 {
  blendingFromSurface = true;
  rasterizerstylefromsurface = true;
  trackingmask = 1537;

  //------ Blend State Group ------
  alphatestref = 100;
  alphatestfunc = less_or_equal;

  //------ Depth Stencil Group ------

  //------ Rasterizer State Group ------

  //------ Tesselation State Group ------
}

RENDER_STATE RSC_6 {
  blendingFromSurface = true;
  rasterizerstylefromsurface = true;
  trackingmask = 512;

  //------ Blend State Group ------
  alphatestref = 100;
  alphatestfunc = less_or_equal;

  //------ Depth Stencil Group ------

  //------ Rasterizer State Group ------

  //------ Tesselation State Group ------
}

RENDER_STATE RSC_7 {
  blendingFromSurface = true;
  rasterizerstylefromsurface = true;
  trackingmask = 512;

  //------ Blend State Group ------
  alphatestref = 100;
  alphatestfunc = less_or_equal;

  //------ Depth Stencil Group ------

  //------ Rasterizer State Group ------

  //------ Tesselation State Group ------
}

RENDER_STATE RSC_8 {
  blendingFromSurface = true;
  rasterizerstylefromsurface = true;

  //------ Blend State Group ------
  alphatestref = 64;
  dstblend = zero;
  dstblendAlpha = zero;

  //------ Depth Stencil Group ------

  //------ Rasterizer State Group ------

  //------ Tesselation State Group ------
}

RENDER_STATE RSC_9 {
  blendingFromSurface = true;
  rasterizerstylefromsurface = true;
  trackingmask = 1540;

  //------ Blend State Group ------
  alphatestref = 100;
  alphatestfunc = less_or_equal;

  //------ Depth Stencil Group ------

  //------ Rasterizer State Group ------

  //------ Tesselation State Group ------
}

SHADER DirLight {
  RenderStateContainerID = 0;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 19;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
//
#include <Shaders\DynamicLightingVS_Perm.inc>
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
//
#include <Shaders\DynamicLightingPS_Perm.inc>
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------
  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight {
  RenderStateContainerID = 1;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 19;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
//
#include <Shaders\DynamicLightingVS_Perm.inc>
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
//
#include <Shaders\DynamicLightingPS_Perm.inc>
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------
  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight {
  RenderStateContainerID = 2;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 1;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
//
#include <Shaders\DynamicLightingVS_Perm.inc>
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
//
#include <Shaders\DynamicLightingPS_Perm.inc>
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------
  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight {
  RenderStateContainerID = 3;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 19;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
#include <Shaders\DynamicLightingVS_Perm.inc>
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
#include <Shaders\DynamicLightingPS_Perm.inc>
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------
  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DepthFill {
  RenderStateContainerID = 4;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 1;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 1;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_mip_linear;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
//
#include <Shaders/DepthRendererVS_Perm.inc>
  }$SOURCECODETAG

  vs_function = "main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
//
#include <Shaders/DepthRendererPS_Perm.inc>
  }$SOURCECODETAG

  ps_function = "main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------
  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid {
  RenderStateContainerID = 5;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 1;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
//
#include <Shaders\LightGridVS_Perm.inc>
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
//
#include <Shaders\LightGridPS_Perm.inc>
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------
  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightmap {
  RenderStateContainerID = 6;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 1;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
//
#include <Shaders/LightmapDot3VS_Perm.inc>
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
//
#include <Shaders/LightmapDot3PS_Perm.inc>
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------
  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3 {
  RenderStateContainerID = 7;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 1;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
//
#include <Shaders/LightmapDot3VS_Perm.inc>
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
//
#include <Shaders/LightmapDot3PS_Perm.inc>
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------
  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Fullbright {
  RenderStateContainerID = 8;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 17;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 1;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 16;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
//
#include <Shaders\FullbrightVS.inc>
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
//
#include <Shaders\FullbrightPS.inc>
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------
  cs_mintarget = cs_5_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple {
  RenderStateContainerID = 9;
  IsAutoGenerated = false;
  UsesPermutationVariables = true;
  streammask = 1;
  RecompilationRequiredOnPlatforms = 0;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
//
#include <Shaders\LightGridVS_Perm.inc>
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------
  hs_mintarget = hs_5_0;

  //------ domain shader source ------
  ds_mintarget = ds_5_0;

  //------ geometry shader source ------
  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
//
#include <Shaders\LightGridPS_Perm.inc>
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------
  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightmap#vMaterial_Default_000 {
  RenderStateContainerID = 6;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 17;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightmap#vMaterial_Default_001 {
  RenderStateContainerID = 6;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 17;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Fullbright#vMaterial_Fullbright_000 {
  RenderStateContainerID = 8;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 17;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 1;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 16;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_5_0;

  //------ platform specific bytecode ------
}

SHADER Fullbright#vMaterial_Fullbright_002 {
  RenderStateContainerID = 8;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 17;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 1;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 16;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_5_0;

  //------ platform specific bytecode ------
}

SHADER Fullbright#vMaterial_Fullbright_004 {
  RenderStateContainerID = 8;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 21;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 1;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 16;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_5_0;

  //------ platform specific bytecode ------
}

SHADER Fullbright#vMaterial_Fullbright_006 {
  RenderStateContainerID = 8;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 21;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 1;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 16;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_5_0;

  //------ platform specific bytecode ------
}

SHADER Lightmap#vMaterial_Lightmap_000 {
  RenderStateContainerID = 6;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 49;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightmap#vMaterial_Lightmap_001 {
  RenderStateContainerID = 6;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 49;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_000 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 49;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_001 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 49;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_004 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_008 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_005 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_009 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_010 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_012 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_011 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_013 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_014 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightmapDot3#vMaterial_LightmapDot3_015 {
  RenderStateContainerID = 7;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 115;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 1;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 2;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = lightmap;
    textureindex = 3;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_000 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_002 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_016 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_032 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_017 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_018 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_034 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_040 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_048 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_019 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_042 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_049 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_050 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_056 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_051 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_057 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_058 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Lightgrid#vMaterial_Lightgrid_059 {
  RenderStateContainerID = 5;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_000 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_002 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_016 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_032 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_017 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_018 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_034 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_040 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_048 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_019 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_042 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_049 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_050 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_056 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_051 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_057 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_058 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER LightgridSimple#vMaterial_LightgridSimple_059 {
  RenderStateContainerID = 9;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 3;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_3;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_3;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_3;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_000 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_001 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_004 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_008 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_016 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_005 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_009 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_012 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_017 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_018 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_020 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_024 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_013 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_019 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_021 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_022 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_025 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_026 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_028 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_023 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_027 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_029 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_030 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DirLight#vMaterial_DirectionalLight_031 {
  RenderStateContainerID = 0;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_000 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_001 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_004 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_008 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_016 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_005 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_009 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_012 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_017 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_018 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_020 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_024 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_013 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_019 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_021 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_022 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_025 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_026 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_028 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_023 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_027 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_029 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_030 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Pointlight#vMaterial_Pointlight_031 {
  RenderStateContainerID = 1;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_000 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_001 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_004 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_008 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_016 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_005 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_009 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_012 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_017 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_018 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_020 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_024 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_013 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_019 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_021 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_022 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_025 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_026 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_028 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_023 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_027 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_029 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_030 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER Spotlight#vMaterial_Spotlight_031 {
  RenderStateContainerID = 3;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = border,border,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_000 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_001 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_004 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_008 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_016 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_005 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_009 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_012 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_017 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_018 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_020 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_024 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_013 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 19;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_019 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_021 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_022 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_025 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_026 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_028 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_023 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_027 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_029 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_030 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER ProjectedPointlight#vMaterial_ProjectedPointlight_031 {
  RenderStateContainerID = 2;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 83;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 6;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 1 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_linear_mip_point;
    textureaddressmode = clamp,clamp,clamp;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 2 = {
    samplername = "";
    texturetype = normalmap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 3 = {
    samplername = "";
    texturetype = cubemap;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,0.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  SAMPLER_PS 4 = {
    samplername = "";
    texturetype = reflectivity_map;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  SAMPLER_PS 5 = {
    samplername = "";
    texturetype = custom;
    textureindex = 0;
    texturefile = "";
    filtermode = default;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 0.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "vs_main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0;
  svs_function = "vs_main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "ps_main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DepthFill#vMaterial_DepthFill_000 {
  RenderStateContainerID = 4;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 1;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 1;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_mip_linear;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

SHADER DepthFill#vMaterial_DepthFill_001 {
  RenderStateContainerID = 4;
  IsAutoGenerated = true;
  UsesPermutationVariables = false;
  streammask = 17;
  RecompilationRequiredOnPlatforms = -744;
  supportedplatforms = 743;
  compileflags = 0;
  hs_controlpoints = 3;

  //------ Texture samplers ------
  numsamplers_vs = 0;
  numsamplers_hs = 0;
  numsamplers_ds = 0;
  numsamplers_gs = 0;
  numsamplers_ps = 1;
  SAMPLER_PS 0 = {
    samplername = "";
    texturetype = base_texture;
    textureindex = 0;
    texturefile = "";
    filtermode = min_mag_mip_linear;
    textureaddressmode = wrap,wrap,wrap;
    m_fLodBias = 0.000000;
    m_iMaxAnisotropy = 1;
    comparisonfunc = less;
    bordercolor = 0.000000,0.000000,0.000000,1.000000;
    minlod = 0.000000;
    maxlod = 1024.000000;
  }
  numsamplers_cs = 0;

  //------ vertex shader source ------

  vs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  vs_function = "main";
  vs_mintarget = vs_3_0;
  vs_mintargetDX11 = vs_4_0_level_9_1;
  svs_function = "main_skinning";
  svs_mintarget = vs_3_0;
  svs_mintargetDX11 = vs_4_0_level_9_1;

  //------ hull shader source ------

  hs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  hs_mintarget = hs_5_0;

  //------ domain shader source ------

  ds_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ds_mintarget = ds_5_0;

  //------ geometry shader source ------

  gs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  gs_mintarget = gs_4_0;
  gs_mintargetDX11 = gs_4_0;

  //------ pixel shader source ------

  ps_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  ps_function = "main";
  ps_mintarget = ps_3_0;
  ps_mintargetDX11 = ps_4_0_level_9_1;

  //------ compute shader source ------

  cs_sourcecode=$SOURCECODETAG{
// *** Source Code Removed ***
// Enable Flag 'Store Auto-Generated Shader Source' to include the final shader-code here.
  }$SOURCECODETAG

  cs_mintarget = cs_4_0;

  //------ platform specific bytecode ------
}

//////////////////////////////////////////////////////////////////////////////

EFFECT vMaterial {
  DESCRIPTION = {};
  PARAMCOMMENT={"AlphaThreshold","","0.25",float,none,""};
  PARAMCOMMENT={"MaterialParams","Material properties (x:spec mult, y:spec exp, z: parallax scale, w: parallax bias)","1,32,0,0",float4,none,""};
  TECHNIQUE "Default"
  {
    inclusionTags="VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\Default.lua";
  }
  TECHNIQUE "Default_000"
  {
    inclusionTags="VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap#vMaterial_Default_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Default_001"
  {
    inclusionTags="ALPHATEST;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap#vMaterial_Default_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Default_002"
  {
    inclusionTags="MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap#vMaterial_Default_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Default_003"
  {
    inclusionTags="ALPHATEST;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap#vMaterial_Default_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Fullbright"
  {
    inclusionTags="FULLBRIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Fullbright";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\Fullbright.lua";
  }
  TECHNIQUE "Fullbright_000"
  {
    inclusionTags="FULLBRIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Fullbright#vMaterial_Fullbright_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Fullbright_001"
  {
    inclusionTags="FULLBRIGHT;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Fullbright#vMaterial_Fullbright_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Fullbright_002"
  {
    inclusionTags="ALPHATEST;FULLBRIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Fullbright#vMaterial_Fullbright_002";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Fullbright_004"
  {
    inclusionTags="FULLBRIGHT;VERTEXCOLOR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Fullbright#vMaterial_Fullbright_004";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Fullbright_003"
  {
    inclusionTags="ALPHATEST;FULLBRIGHT;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Fullbright#vMaterial_Fullbright_002";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Fullbright_005"
  {
    inclusionTags="FULLBRIGHT;MIRROR;VERTEXCOLOR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Fullbright#vMaterial_Fullbright_004";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Fullbright_006"
  {
    inclusionTags="ALPHATEST;FULLBRIGHT;VERTEXCOLOR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Fullbright#vMaterial_Fullbright_006";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Fullbright_007"
  {
    inclusionTags="ALPHATEST;FULLBRIGHT;MIRROR;VERTEXCOLOR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Fullbright#vMaterial_Fullbright_006";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightmap"
  {
    inclusionTags="LIGHTMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\Lightmap.lua";
  }
  TECHNIQUE "Lightmap_000"
  {
    inclusionTags="LIGHTMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap#vMaterial_Lightmap_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightmap_001"
  {
    inclusionTags="ALPHATEST;LIGHTMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap#vMaterial_Lightmap_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightmap_002"
  {
    inclusionTags="LIGHTMAP;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap#vMaterial_Lightmap_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightmap_003"
  {
    inclusionTags="ALPHATEST;LIGHTMAP;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightmap#vMaterial_Lightmap_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3"
  {
    inclusionTags="LIGHTMAPDOT3;VMATERIAL_NORMALMAP";
    passes="LightmapDot3";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\LightmapDot3.lua";
  }
  TECHNIQUE "LightmapDot3_000"
  {
    inclusionTags="LIGHTMAPDOT3;VMATERIAL_NORMALMAP";
    passes="LightmapDot3#vMaterial_LightmapDot3_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_001"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;VMATERIAL_NORMALMAP";
    passes="LightmapDot3#vMaterial_LightmapDot3_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_004"
  {
    inclusionTags="LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="LightmapDot3#vMaterial_LightmapDot3_004";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_008"
  {
    inclusionTags="LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_008";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_016"
  {
    inclusionTags="LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP";
    passes="LightmapDot3#vMaterial_LightmapDot3_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_005"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="LightmapDot3#vMaterial_LightmapDot3_005";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_009"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_009";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_010"
  {
    inclusionTags="LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_010";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_012"
  {
    inclusionTags="LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_012";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_017"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP";
    passes="LightmapDot3#vMaterial_LightmapDot3_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_020"
  {
    inclusionTags="LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="LightmapDot3#vMaterial_LightmapDot3_004";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_024"
  {
    inclusionTags="LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_008";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_011"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_011";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_013"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_013";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_014"
  {
    inclusionTags="LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_014";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_021"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="LightmapDot3#vMaterial_LightmapDot3_005";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_025"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_009";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_026"
  {
    inclusionTags="LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_010";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_028"
  {
    inclusionTags="LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_012";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_015"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_015";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_027"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_011";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_029"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_013";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_030"
  {
    inclusionTags="LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_014";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightmapDot3_031"
  {
    inclusionTags="ALPHATEST;LIGHTMAPDOT3;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightmapDot3#vMaterial_LightmapDot3_015";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid"
  {
    inclusionTags="LIGHTGRID";
    passes="Lightgrid";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\Lightgrid.lua";
  }
  TECHNIQUE "Lightgrid_000"
  {
    inclusionTags="LIGHTGRID";
    passes="Lightgrid#vMaterial_Lightgrid_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_002"
  {
    inclusionTags="ALPHATEST;LIGHTGRID";
    passes="Lightgrid#vMaterial_Lightgrid_002";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_004"
  {
    inclusionTags="LIGHTGRID;MIRROR";
    passes="Lightgrid#vMaterial_Lightgrid_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_016"
  {
    inclusionTags="LIGHTGRID;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_016";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_032"
  {
    inclusionTags="LIGHTGRID;VMATERIAL_NORMALMAP";
    passes="Lightgrid#vMaterial_Lightgrid_032";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_006"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;MIRROR";
    passes="Lightgrid#vMaterial_Lightgrid_002";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_017"
  {
    inclusionTags="LIGHTGRID;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_017";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_018"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_018";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_020"
  {
    inclusionTags="LIGHTGRID;MIRROR;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_016";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_034"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;VMATERIAL_NORMALMAP";
    passes="Lightgrid#vMaterial_Lightgrid_034";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_036"
  {
    inclusionTags="LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP";
    passes="Lightgrid#vMaterial_Lightgrid_032";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_040"
  {
    inclusionTags="LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="Lightgrid#vMaterial_Lightgrid_040";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_048"
  {
    inclusionTags="LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_048";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_019"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_019";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_021"
  {
    inclusionTags="LIGHTGRID;MIRROR;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_017";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_022"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;MIRROR;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_018";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_038"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP";
    passes="Lightgrid#vMaterial_Lightgrid_034";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_042"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="Lightgrid#vMaterial_Lightgrid_042";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_044"
  {
    inclusionTags="LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="Lightgrid#vMaterial_Lightgrid_040";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_049"
  {
    inclusionTags="LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_049";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_050"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_050";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_052"
  {
    inclusionTags="LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_048";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_056"
  {
    inclusionTags="LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_056";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_023"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;MIRROR;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_019";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_046"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="Lightgrid#vMaterial_Lightgrid_042";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_051"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_051";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_053"
  {
    inclusionTags="LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_049";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_054"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_050";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_057"
  {
    inclusionTags="LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_057";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_058"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_058";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_060"
  {
    inclusionTags="LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_056";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_055"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_051";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_059"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_059";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_061"
  {
    inclusionTags="LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_057";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_062"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_058";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Lightgrid_063"
  {
    inclusionTags="ALPHATEST;LIGHTGRID;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Lightgrid#vMaterial_Lightgrid_059";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple"
  {
    inclusionTags="LIGHTGRIDSIMPLE";
    passes="LightgridSimple";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\LightgridSimple.lua";
  }
  TECHNIQUE "LightgridSimple_000"
  {
    inclusionTags="LIGHTGRIDSIMPLE";
    passes="LightgridSimple#vMaterial_LightgridSimple_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_002"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE";
    passes="LightgridSimple#vMaterial_LightgridSimple_002";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_004"
  {
    inclusionTags="LIGHTGRIDSIMPLE;MIRROR";
    passes="LightgridSimple#vMaterial_LightgridSimple_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_016"
  {
    inclusionTags="LIGHTGRIDSIMPLE;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_016";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_032"
  {
    inclusionTags="LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP";
    passes="LightgridSimple#vMaterial_LightgridSimple_032";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_006"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;MIRROR";
    passes="LightgridSimple#vMaterial_LightgridSimple_002";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_017"
  {
    inclusionTags="LIGHTGRIDSIMPLE;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_017";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_018"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_018";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_020"
  {
    inclusionTags="LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_016";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_034"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP";
    passes="LightgridSimple#vMaterial_LightgridSimple_034";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_036"
  {
    inclusionTags="LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP";
    passes="LightgridSimple#vMaterial_LightgridSimple_032";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_040"
  {
    inclusionTags="LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="LightgridSimple#vMaterial_LightgridSimple_040";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_048"
  {
    inclusionTags="LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_048";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_019"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_019";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_021"
  {
    inclusionTags="LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_017";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_022"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_018";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_038"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP";
    passes="LightgridSimple#vMaterial_LightgridSimple_034";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_042"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="LightgridSimple#vMaterial_LightgridSimple_042";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_044"
  {
    inclusionTags="LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="LightgridSimple#vMaterial_LightgridSimple_040";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_049"
  {
    inclusionTags="LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_049";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_050"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_050";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_052"
  {
    inclusionTags="LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_048";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_056"
  {
    inclusionTags="LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_056";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_023"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_019";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_046"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="LightgridSimple#vMaterial_LightgridSimple_042";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_051"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_051";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_053"
  {
    inclusionTags="LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_049";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_054"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_050";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_057"
  {
    inclusionTags="LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_057";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_058"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_058";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_060"
  {
    inclusionTags="LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_056";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_055"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_051";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_059"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_059";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_061"
  {
    inclusionTags="LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_057";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_062"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_058";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "LightgridSimple_063"
  {
    inclusionTags="ALPHATEST;LIGHTGRIDSIMPLE;MIRROR;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="LightgridSimple#vMaterial_LightgridSimple_059";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight"
  {
    inclusionTags="DIRECTIONALLIGHT";
    passes="DirLight";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\DirectionalLight.lua";
  }
  TECHNIQUE "DirectionalLight_000"
  {
    inclusionTags="DIRECTIONALLIGHT";
    passes="DirLight#vMaterial_DirectionalLight_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_001"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_REFMAP";
    passes="DirLight#vMaterial_DirectionalLight_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_004"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_004";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_008"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP";
    passes="DirLight#vMaterial_DirectionalLight_008";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_016"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_NORMALMAP";
    passes="DirLight#vMaterial_DirectionalLight_016";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_005"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_005";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_009"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_REFMAP";
    passes="DirLight#vMaterial_DirectionalLight_009";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_012"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_012";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_017"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP";
    passes="DirLight#vMaterial_DirectionalLight_017";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_018"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="DirLight#vMaterial_DirectionalLight_018";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_020"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_020";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_024"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP";
    passes="DirLight#vMaterial_DirectionalLight_024";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_013"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_013";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_019"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP";
    passes="DirLight#vMaterial_DirectionalLight_019";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_021"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_021";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_022"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_022";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_025"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP";
    passes="DirLight#vMaterial_DirectionalLight_025";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_026"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="DirLight#vMaterial_DirectionalLight_026";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_028"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_028";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_023"
  {
    inclusionTags="DIRECTIONALLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_023";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_027"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP";
    passes="DirLight#vMaterial_DirectionalLight_027";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_029"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_029";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_030"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_030";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DirectionalLight_031"
  {
    inclusionTags="DIRECTIONALLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="DirLight#vMaterial_DirectionalLight_031";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight"
  {
    inclusionTags="POINTLIGHT";
    passes="Pointlight";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\Pointlight.lua";
  }
  TECHNIQUE "Pointlight_000"
  {
    inclusionTags="POINTLIGHT";
    passes="Pointlight#vMaterial_Pointlight_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_001"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_REFMAP";
    passes="Pointlight#vMaterial_Pointlight_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_004"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_004";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_008"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP";
    passes="Pointlight#vMaterial_Pointlight_008";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_016"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_NORMALMAP";
    passes="Pointlight#vMaterial_Pointlight_016";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_005"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_005";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_009"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_REFMAP";
    passes="Pointlight#vMaterial_Pointlight_009";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_012"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_012";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_017"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP";
    passes="Pointlight#vMaterial_Pointlight_017";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_018"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="Pointlight#vMaterial_Pointlight_018";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_020"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_020";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_024"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP";
    passes="Pointlight#vMaterial_Pointlight_024";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_013"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_013";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_019"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP";
    passes="Pointlight#vMaterial_Pointlight_019";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_021"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_021";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_022"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_022";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_025"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP";
    passes="Pointlight#vMaterial_Pointlight_025";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_026"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="Pointlight#vMaterial_Pointlight_026";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_028"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_028";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_023"
  {
    inclusionTags="POINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_023";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_027"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP";
    passes="Pointlight#vMaterial_Pointlight_027";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_029"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_029";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_030"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_030";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Pointlight_031"
  {
    inclusionTags="POINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Pointlight#vMaterial_Pointlight_031";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight"
  {
    inclusionTags="SPOTLIGHT";
    passes="Spotlight";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\Spotlight.lua";
  }
  TECHNIQUE "Spotlight_000"
  {
    inclusionTags="SPOTLIGHT";
    passes="Spotlight#vMaterial_Spotlight_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_001"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_REFMAP";
    passes="Spotlight#vMaterial_Spotlight_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_004"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_004";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_008"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT";
    passes="Spotlight#vMaterial_Spotlight_008";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_016"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_NORMALMAP";
    passes="Spotlight#vMaterial_Spotlight_016";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_005"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_005";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_009"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_REFMAP";
    passes="Spotlight#vMaterial_Spotlight_009";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_012"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_012";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_017"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP";
    passes="Spotlight#vMaterial_Spotlight_017";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_018"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="Spotlight#vMaterial_Spotlight_018";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_020"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_020";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_024"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_NORMALMAP";
    passes="Spotlight#vMaterial_Spotlight_024";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_013"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_013";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_019"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP";
    passes="Spotlight#vMaterial_Spotlight_019";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_021"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_021";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_022"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_022";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_025"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP";
    passes="Spotlight#vMaterial_Spotlight_025";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_026"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="Spotlight#vMaterial_Spotlight_026";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_028"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_028";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_023"
  {
    inclusionTags="SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_023";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_027"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP";
    passes="Spotlight#vMaterial_Spotlight_027";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_029"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_029";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_030"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_030";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "Spotlight_031"
  {
    inclusionTags="SHADOWMAP;SPOTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="Spotlight#vMaterial_Spotlight_031";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight"
  {
    inclusionTags="PROJPOINTLIGHT";
    passes="ProjectedPointlight";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\ProjectedPointlight.lua";
  }
  TECHNIQUE "ProjectedPointlight_000"
  {
    inclusionTags="PROJPOINTLIGHT";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_001"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_REFMAP";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_004"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_004";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_008"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_008";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_016"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_NORMALMAP";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_016";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_005"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_005";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_009"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_REFMAP";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_009";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_012"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_012";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_017"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_017";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_018"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_018";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_020"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_020";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_024"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_024";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_013"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_013";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_019"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_019";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_021"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_021";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_022"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_022";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_025"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_025";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_026"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_026";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_028"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_028";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_023"
  {
    inclusionTags="PROJPOINTLIGHT;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_023";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_027"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_027";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_029"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_029";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_030"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_030";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "ProjectedPointlight_031"
  {
    inclusionTags="PROJPOINTLIGHT;SHADOWMAP;VMATERIAL_NORMALMAP;VMATERIAL_PARALLAX;VMATERIAL_REFMAP;VMATERIAL_SPECULAR";
    passes="ProjectedPointlight#vMaterial_ProjectedPointlight_031";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DepthFill"
  {
    inclusionTags="DEPTHFILL";
    passes="DepthFill";
    passtype = Auto;
    IsPermutationTechnique=true;
    IsAutoGenerated=false;
    PermutationConfigFile="Shaders\vMaterial.Shaderbin\DepthFill.lua";
  }
  TECHNIQUE "DepthFill_000"
  {
    inclusionTags="DEPTHFILL";
    passes="DepthFill#vMaterial_DepthFill_000";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
  TECHNIQUE "DepthFill_001"
  {
    inclusionTags="ALPHATEST;DEPTHFILL";
    passes="DepthFill#vMaterial_DepthFill_001";
    passtype = Auto;
    IsPermutationTechnique=false;
    IsAutoGenerated=true;
  }
}

